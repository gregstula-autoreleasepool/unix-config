filetype off
syntax on
filetype plugin indent on
set sessionoptions-=options

" vim not vi
set nocompatible

filetype plugin indent on    " required

syntax on
set number

" Auto indent
set ai
" Smart indent
set si

" Treats tabs like buffers ... questionable
tab sball

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" This shows what you are typing as a command.
set showcmd

" Use visual bell instead of beeping when doing something wrong
set visualbell

" And reset the terminal code for the visual bell. If visualbell is set, and
" this line is also included, vim will neither flash nor beep. If visualbell
" is unset, this does nothing.
set t_vb=

" Visualize tabs
"syntax match Tab /\t/
hi Tab gui=underline guifg=blue ctermbg=blue


" Use spaces instead of tabs
set expandtab

set ts=4
set softtabstop=0 noexpandtab
set sw=4

" Be smart when using tabs ;)
set smarttab

" default character width 100
set tw=120
set colorcolumn=120
set cursorline
set ruler

" Autotrim trailing whitespace on exit
autocmd BufWritePre * %s/\s\+$//e
set wrap
set linebreak
set showbreak=>\ \ \

" Hide the mouse pointer while typing
set mousehide

" Make the command-line completion better
set wildmenu

" Zee greatest shell
set shell=zsh

" TODO: the remaining language specific stuff should all be in submodules of plugin forks
autocmd FileType c setlocal tw=80 colorcolumn=80 cindent

" makefiles need tabs
autocmd FileType make setlocal noexpandtab

" Obj-C++
autocmd BufRead,BufNewFile *.mm,*.mpp setlocal cindent filetype=objc++

" Ruby
autocmd FileType ruby setlocal  tabstop=2 sw=2
autocmd FileType eruby setlocal tabstop=2 sw=2

" JS and JSON
autocmd FileType javascript setlocal tabstop=2 sw=2
autocmd FileType json setlocal tabstop=2 sw=2
autocmd BufRead,BufNewFile .eslintrc,.babelrc setlocal filetype=json

let g:jsx_ext_required = 0
let g:js_context_colors_jsx=1
let g:syntastic_javascript_checkers = ['eslint']
let g:synstastic_json_checkers = ['jsonlint']
let g:vim_json_syntax_conceal = 0

if executable('node_modules/.bin/eslint')
  let b:syntastic_javascript_eslint_exec = 'node_modules/.bin/eslint'
endif

"HTML
autocmd FileType html setlocal tabstop=2 sw=2

" C++
autocmd FileType c++ setlocal cindent
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_experimental_template_highlight = 1

" default gui settings
" if has("gui_running")
"     if has("gui_gtk2")
"        set guifont=Consolas\ 14
"     elseif has("gui_macvim")
"        set guifont=Consolas:h16
"     elseif has("gui_win32")
"         set guifont=Consolas:h16:cANSI
"     endif
" endif

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ",,"
let g:mapleader = ",,"

" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

call plug#begin('~/.vim/plugged')
Plug 'tomasr/molokai'
Plug 'PotatoesMaster/i3-vim-syntax'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'ycm-core/YouCompleteMe'
Plug 'rdnetto/YCM-Generator', { 'branch': 'stable'}
Plug 'jeaye/color_coded'
call plug#end()
map <C-n> :NERDTreeToggle<CR>

" disable ycm ask prompt -- insecure runs arbitrary code
let g:ycm_confirm_extra_conf = 0

" the one and only colorscheme I ever use
color molokai
let g:airline_theme='base16_monokai'
" Keep terminal background
set matchpairs=
